spring.application.name=airaware
server.port=${SERVER_PORT}

spring.config.import=file:.env[.properties]

spring.data.mongodb.uri=${DB_URI}
spring.data.mongodb.database=${DB_NAME}

jwt.secretKey=${JWT_SECRET_KEY}

spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE}

# Kafka Bootstrap Server (for Docker compose networking)
spring.kafka.bootstrap-servers=kafka:9092

# Consumer Configuration
spring.kafka.consumer.group-id=backend-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka topics
kafka.topic.disease-predictions=disease-predictions
kafka.topic.paid-user-notifications=paid-user-notifications
kafka.topic.free-user-notifications=free-user-notifications
kafka.topic.air-quality=air-quality-data

# Optional: Enable debug logging for Kafka (useful for troubleshooting)
logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=INFO